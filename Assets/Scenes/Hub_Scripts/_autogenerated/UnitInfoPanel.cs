/////////////////////////////////////////
//     THIS IS AUTOGENERATED CODE      //
//       do not change directly        //
/////////////////////////////////////////
using System;
using UnityEngine;
using System.Collections.Generic;
using UnityEngine.UI;
using CometUI;

namespace Hub_UI
{
    partial class UnitInfoPanel : BaseView //Autogenerated
    {
        /// <summary>Static instance of the view</summary>
        public static UnitInfoPanel Instance { get; private set; }
        // Controls
        #pragma warning disable 0414
        //[Header("Controls (auto capture)")]
        [Header("Custom")]
        [AutoGenerated, SerializeField, HideInInspector] Hub_UI.ItemInfo pnItemInfo = default;
        [AutoGenerated, SerializeField, HideInInspector] Hub_UI.UnitInfo pnUnitInfo = default;
        [AutoGenerated, SerializeField, HideInInspector] Hub_UI.Slot slArmor = default;
        [AutoGenerated, SerializeField, HideInInspector] Hub_UI.Slot slModule0 = default;
        [AutoGenerated, SerializeField, HideInInspector] Hub_UI.Slot slModule1 = default;
        [AutoGenerated, SerializeField, HideInInspector] Hub_UI.Slot slModule2 = default;
        [AutoGenerated, SerializeField, HideInInspector] UnityEngine.UI.Image imUnitFull = default;
        [AutoGenerated, SerializeField, HideInInspector] Hub_UI.Slot slWeapon0 = default;
        [AutoGenerated, SerializeField, HideInInspector] Hub_UI.Slot slWeapon1 = default;
        [AutoGenerated, SerializeField, HideInInspector] OutlineButton btSwapWeapons = default;
        [AutoGenerated, SerializeField, HideInInspector] OutlineButton btClose = default;
        [AutoGenerated, SerializeField, HideInInspector] StoragePanel StoragePanel = default;
        [AutoGenerated, SerializeField, HideInInspector] ItemInfo ItemInfo = default;
        #pragma warning restore 0414
        
        public override void AutoSubscribe()
        {
            SubscribeOnChanged(pnItemInfo);
            SubscribeOnChanged(pnUnitInfo);
            SubscribeOnChanged(slArmor);
            SubscribeOnChanged(slModule0);
            SubscribeOnChanged(slModule1);
            SubscribeOnChanged(slModule2);
            SubscribeOnChanged(imUnitFull);
            SubscribeOnChanged(slWeapon0);
            SubscribeOnChanged(slWeapon1);
            SubscribeOnChanged(btSwapWeapons);
            SubscribeOnChanged(btClose);
            SubscribeOnChanged(StoragePanel);
            SubscribeOnChanged(ItemInfo);
            Subscribe(btClose, () => this.Close());
        }
        ///<summary>Data</summary>
        public Model.Unit unit{ get; private set; }
        
        [VisibleInGraph(false)]
        public void Build(Model.Unit unit)
        {
            this.unit = unit;
            OnBuildSafe(true);
        }
        
        public override BaseView Clone()
        {
            var clone = (UnitInfoPanel)base.Clone();
            clone.unit = unit;
            return clone;
        }
    }
}